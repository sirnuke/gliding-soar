import "common.stg"

output(element) ::= <<
<namespace(element.identifier.value, body(element))>
>>

body(element) ::= <<
<ngsDeclareType(element.identifier.value)>

<constructors(element)>

# TODO: Other functions?
>>

constructors(element) ::= <<
<proc(name="create", args=iConstructorArguments(element.allMembers), body=iConstructorBody(element), public=true)>

<proc(name="create-by-operator", args=oConstructorArguments(element.allMembers), body=oConstructorBody(element), public=true)>
>>

iConstructorArguments(members) ::= <<
<requiredParametersAsArguments(members)><\\>
<optionalParametersAsArguments(members)><\\>
<optionalArguments(["destination", "attribute", "binding"])>
>>

iConstructorBody(element) ::= <<

<setDefaultValue("destination", outputBinding())>
<setDefaultValue("attribute", element.identifier.lowercase)>
<setDefaultValue("binding", binding(element.identifier.lowercase))>

<createAttrsOfAllParameters("attrs", element.allMembers)>

<return(callCreate(element.identifier.value, "$destination_", "$attribute_", "$binding_", "$attrs"))>
>>


oConstructorArguments(members) ::= <<
<requiredParametersAsArguments(members)><\\>
<optionalParametersAsArguments(members)><\\>
<optionalArguments(["destination", "attribute", "binding", "state", "add_prefs"])>
>>

oConstructorBody(element) ::= <<

<setDefaultValue("destination", outputBinding())>
<setDefaultValue("attribute", element.identifier.lowercase)>
<setDefaultValue("binding", binding(element.identifier.lowercase))>
<setDefaultValue("state", stateBinding())>
<setDefaultValue("add_prefs", {"<ngsDefaultAddPrefs()>"})>

<createAttrsOfAllParameters("attrs", element.allMembers)>

<return(callCreateByOperator(element.identifier.value, "$destination_", "$attribute_", "$binding_", "$state_", "$add_prefs_", "$attrs"))>
>>
