import "common.stg"

bundle(model, root, arguments, version, when) ::= <<
<header(version, when, arguments)>

<root.children:childNamespace()>
<root.elements; separator="\n">

<namespace("glide", commonCode())>
>>

header(version, when, arguments) ::= <<
# Glide v<version>
# Generated on <when>
#
<if(arguments)># Arguments: <arguments; separator=" "><endif>
#
# Autogenerated code, do not modify
>>

commonCode() ::= <<
<proc(name="check-rhs", args="type", public=true, body={<\\>
# TODO: Stub!<\\>
})>

<proc(name="check-types", args="spec", public=true, body={<\\>
# TODO: Stub!<\\>
})>

<proc(name="claim-binding", args="binding type", public=true, body={<\\>
# TODO: Stub!<\\>
})>

<proc(name="check-i-modification", args="binding attribute type", public=true, body={<\\>
# TODO: Stub!<\\>
})>

<proc(name="check-o-modification", args="binding attribute type", public=true, body={<\\>
# TODO: Stub!<\\>
})>

<proc(name="state-binding", args="", public=true, body={<\\>
# TODO: Stub!
return "\<s>"<\\>
})>
>>

childNamespace(ns) ::= <<
<namespace(ns.name, {
<ns.children:childNamespace()>
<ns.elements; separator="\n">
})>
>>
