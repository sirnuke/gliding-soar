bundle(model, root, arguments, version, when) ::= <<
# Glide v<version>
# Generated on <when>
#
<if(arguments)># Arguments: <arguments; separator=" "><endif>
#
# Autogenerated code, do not modify

<root.children:namespace()>
<root.elements:element()>
>>


namespace(ns) ::= <<
namespace eval <ns.name> {
    <ns.children:namespace()>

    <ns.elements:element()>
}>>

element(e) ::= <<
<if(e.tangible)>
namespace eval <e.identifier.value> {
    <body(e)>
}
<endif>
>>

body(e) ::= <<
<if(e.constructable)>
<constructors(e)>
<endif>
# TODO: Stub body(e: Element)
>>

constructors(e) ::= <<
<proc("create", trim((constructorArgs(e.body))), {<iconstructorBody(e.body)>}, true)>
<proc("create-by-operator", trim((constructorArgs(e.body))), {<oconstructorBody(e.body)>}, true)>
>>

constructorArgs(body) ::= << <body.requiredParameters:requiredArg(); separator=" "> <body.optionalParameters:optionalArg(); separator=" "> >>

requiredArg(p) ::= "<p.identifier.value>"

optionalArg(p) ::= <<{ <p.identifier.value> "" }>>

iconstructorBody(body) ::= <<
hello
world
>>

oconstructorBody(body) ::= <<
yeah
what
>>

proc(name, args, body, public) ::= <<
<if(public)><export(name)><endif>
proc <name> { <args; separator=" "> } {
    <body>
}

>>

export(name) ::= "namespace export <name>"
