bundle(model, root, arguments, version, when) ::= <<
# Glide <version>
# Generated on <when>
#
<if(arguments)># Arguments: <arguments; separator=" "><endif>
#
# Autogenerated code, do not modify

<namespace(root)>
>>

namespace(ns) ::= <<
<if(ns.name)>namespace eval <ns.name> {<endif>
    <ns.children:namespace()>

    <ns.elements:element()>
<if(ns.name)>}<endif>
>>

element(e) ::= <<
<if(e.tangible)>
namespace eval <e.identifier.value> {
    <body(e)>
}
<endif>
>>

body(e) ::= <<
<if(e.constructable)>
<constructors(e)>
<endif>
# TODO: Stub body(e: Element)
>>

constructors(e) ::= <<
<proc("create", "?", "!", true)>
<proc("create-by-operator", "?", "!", true)>
>>

proc(name, args, body, public) ::= <<
<if(public)><export(name)><endif>
proc <name> { <args; separator=" "> } {
<body>
}
>>

export(name) ::= "namespace export <name>"
